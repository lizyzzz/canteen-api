syntax = "v1"

type RegisterReq {
	//代表可以接收json参数 并且是必填参数 注意 go-zero不支持多tag
	Username   string `json:"username"`
	Password   string `json:"password"`
	Invitecode string `json:"invitecode"`
}

type RegisterResp {}

type LoginReq {
	Username string `json:"username"`
	Password string `json:"password"`
}

type LoginResp {
	UserId   string  `json:"userId"`
	Username string  `json:"username"`
	Usertype string  `json:"usertype"`
	Balance  float64 `json:"balance"`
	Token    string  `json:"token"`
}

type DishInfo {
	Id          int     `json:"id"`
	Name        string  `json:"name"`
	Price       float64 `json:"price"`
	Category    string  `json:"category"`
	Ingredients string  `json:"ingredients"`
	ImageUrl    string  `json:"imageurl"`
}

type DishInfoResp {
	Categories []string   `json:"categories"`
	DishList   []DishInfo `json:"dishlist"`
}

@server (
	//代表当前service的代码会放在account目录下
	//这里注意 冒号要紧贴着key
	group: account
)
//影响配置文件名称和主文件名称
service canteen-api {
	//handler中的函数名称
	@handler register
	post /api/user/register (RegisterReq) returns (RegisterResp)

	@handler login
	post /api/user/login (LoginReq) returns (LoginResp)
}

@server (
	//代表当前service的代码会放在account目录下
	//这里注意 冒号要紧贴着key
	group: dish
	// 开启jwt认证
	jwt: Auth
)
//影响配置文件名称和主文件名称
service canteen-api {
	//handler中的函数名称
	@handler getDishInfo
	get /api/dish/info returns (DishInfoResp)
}

type OrderItem {
	Id    int     `json:"id"`
	Name  string  `json:"name"`
	Price float64 `json:"price"`
	Count int     `json:"count"`
}

type PayOrderReq {
	UserId     string      `json:"userId"`
	Items      []OrderItem `json:"items"`
	TotalPrice float64     `json:"totalprice"`
	PickupTime string      `json:"pickupTime"`
}

type PayOrderResp {
	Balance float64 `json:"balance"`
}

type OrderInfoReq {
	UserId string `form:"userId"`
	Page   int    `form:"page"`
	Size   int    `form:"size"`
}

type OrderInfoItem {
	Id    int    `json:"id"`
	Name  string `json:"name"`
	Count int    `json:"count"`
}

type OrderInfo {
	OrderId    int64           `json:"orderid"`
	Status     string          `json:"status"`
	UserId     string          `json:"userId"`
	Username   string          `json:"username"`
	Items      []OrderInfoItem `json:"items"`
	TotalPrice float64         `json:"totalprice"`
	CreateTime string          `json:"createtime"`
	PickupTime string          `json:"pickupTime"`
}

type OrderInfoResp {
	Orders []OrderInfo `json:"orders"`
}

@server (
	//代表当前service的代码会放在account目录下
	//这里注意 冒号要紧贴着key
	group: order
	// 开启jwt认证
	jwt: Auth
)
//影响配置文件名称和主文件名称
service canteen-api {
	//handler中的函数名称
	@handler PayOrder
	post /api/order/pay (PayOrderReq) returns (PayOrderResp)

	@handler getOrderInfo
	get /api/order/info (OrderInfoReq) returns (OrderInfoResp)
}

type ModifyBalanceReq {
	AdminId  string  `json:"adminId"`
	Username string  `json:"username"`
	Balance  float64 `json:"balance"`
}

type ModifyBalanceResp {
	UserId  string  `json:"userId"`
	Balance float64 `json:"balance"`
}

type AdminOrderInfoReq {
	UserId string `form:"userId"`
	Page   int    `form:"page"`
	Size   int    `form:"size"`
}

type AdminOrderInfoResp {
	TotalNo int         `json:"totalno"`
	Orders  []OrderInfo `json:"orders"`
}

type OrderCompleteReq {
	UserId      string `json:"userId"`
	OrderUserId string `json:"orderUserId"`
	OrderId     int64  `json:"orderId"`
}

type OrderCompleteResp {
	TotalNo int `json:"totalno"`
}

type UploadDishResp {
	OK int `json:"ok"`
}

@server (
	//代表当前service的代码会放在account目录下
	//这里注意 冒号要紧贴着key
	group: admin
	// 开启jwt认证
	jwt: Auth
)
//影响配置文件名称和主文件名称
service canteen-api {
	//handler中的函数名称
	@handler ModifyBalance
	post /api/admin/user/balance (ModifyBalanceReq) returns (ModifyBalanceResp)

	@handler OrderComplete
	post /api/admin/order/complete (OrderCompleteReq) returns (OrderCompleteResp)

	@handler getOrderInfo
	get /api/admin/order/info (AdminOrderInfoReq) returns (AdminOrderInfoResp)

	@handler AddDishes
	post /api/admin/menu/dish returns (UploadDishResp)
}

